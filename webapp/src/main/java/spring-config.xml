<?xml version="1.0" encoding="UTF-8"?>


<beans default-autowire="byName"
	xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context" xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
http://www.springframework.org/schema/context
http://www.springframework.org/schema/context/spring-context-3.0.xsd">


	<context:annotation-config />
	<!-- <context:component-scan base-package="net.micwin.elysium" /> -->

	<!-- =================================================== -->
	<!-- =========== configuring persistence layer ======= -->
	<!-- =================================================== -->

	<import resource="datasource-bean.xml" />


	<bean id="sessionFactory"
		class="org.springframework.orm.hibernate3.annotation.AnnotationSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.hbm2ddl.auto">update</prop>
				<prop key="hibernate.dialect">${database.dialect}</prop>
				<prop key="hibernate.connection.pool_size">${database.poolSize}</prop>
				<!-- <prop key="hibernate.transaction.factory_class"> org.hibernate.transaction.JTATransactionFactory</prop> -->
				<!-- <prop key="hibernate.transaction.manager_lookup_class">org.hibernate.transaction.JBossTSStandaloneTransactionManagerLookup</prop> -->

				<!-- <prop key="hibernate.transaction.factory_class">org.hibernate.transaction.JDBCTransactionFactory -->
				<!-- </prop> -->
				<prop key="hibernate.connection.release_mode">after_transaction</prop>
				<prop key="hibernate.current_session_context_class">thread</prop>
				<!-- prop key="hibernate.show_sql">${database.showSql}</prop -->
				<prop key="hibernate.show_sql">false</prop>

				<prop key="hibernate.bytecode.use_reflection_optimizer">true</prop>
				<!-- <prop key="hibernate.cache.provider_class">net.sf.ehcache.hibernate.EhCacheProvider</prop> -->

				<prop key="hibernate.cache.provider_class">org.hibernate.cache.NoCacheProvider</prop>

				<prop key="hibernate.hibernate.cache.use_query_cache">true</prop>
			</props>
		</property>
		<property name="packagesToScan" value="net.micwin.elysium.entities" />
	</bean>

	<!-- =================================================== -->
	<!-- =========== configuring transaction manager ======= -->
	<!-- =================================================== -->

	<bean id="txManager"
		class="org.springframework.orm.hibernate3.HibernateTransactionManager">
		<property name="sessionFactory">
			<ref bean="sessionFactory" />
		</property>
	</bean>

	<tx:annotation-driven transaction-manager="txManager" />

	<!-- =================================================== -->
	<!-- ===================== configuring dao layer ======= -->
	<!-- =================================================== -->

	<bean id="userDao" class="net.micwin.elysium.dao.HibernateUserDao">
		<constructor-arg ref="sessionFactory" />
	</bean>

	<bean id="avatarDao" class="net.micwin.elysium.dao.HibernateAvatarDao">
		<constructor-arg ref="sessionFactory" />
	</bean>
	<bean id="sysParamDao" class="net.micwin.elysium.dao.HibernateSysParamDao">
		<constructor-arg ref="sessionFactory" />
	</bean>
	<bean id="nanitesDao" class="net.micwin.elysium.dao.HibernateNanitesDao">
		<constructor-arg ref="sessionFactory" />
	</bean>
	<bean id="galaxyDao" class="net.micwin.elysium.dao.HibernateGalaxyDao">
		<constructor-arg ref="sessionFactory" />
	</bean>
	<bean id="bluePrintDao" class="net.micwin.elysium.dao.HibernateBluePrintDao">
		<constructor-arg ref="sessionFactory" />
	</bean>
	<bean id="buildPlanDao" class="net.micwin.elysium.dao.HibernateBuildPlanDao">
		<constructor-arg ref="sessionFactory" />
	</bean>
	<bean id="talentsDao" class="net.micwin.elysium.dao.HibernateTalentsDao">
		<constructor-arg ref="sessionFactory" />
	</bean>
	<bean id="gatesDao" class="net.micwin.elysium.dao.HibernateGatesDao">
		<constructor-arg ref="sessionFactory" />
	</bean>
	<bean id="organizationDao" class="net.micwin.elysium.dao.HibernateOrganizationDao">
		<constructor-arg ref="sessionFactory" />
	</bean>

	<bean id="messageDao" class="net.micwin.elysium.dao.HibernateMessageDao">
		<constructor-arg ref="sessionFactory" />
	</bean>

	<bean id="daoManager" class="net.micwin.elysium.dao.DaoManager"
		autowire="byName" />

	<bean id="dbConsistencyEnsurer" class="net.micwin.elysium.entities.DatabaseConsistencyEnsurer"
		autowire="byName" />


	<!-- =================================================== -->
	<!-- =========== configuring jee persistence =========== -->
	<!-- =================================================== -->


	<!-- <bean id="openSessionInViewFilter" -->
	<!-- class="org.springframework.orm.hibernate3.support.OpenSessionInViewFilter"> -->
	<!-- <property name="flushMode" value="AUTO" /> -->
	<!-- <property name="singleSession" value="true" /> -->
	<!-- </bean> -->

	<bean id="elysiumFilter" class="net.micwin.elysium.jee.ElysiumFilter">
		<property name="sf" ref="sessionFactory" />
		<property name="sessionTxEnabled" value="true" />
		<property name="dbConsistencyEnsurer" ref="dbConsistencyEnsurer" />
	</bean>





	<!-- =================================================== -->
	<!-- ================ configuring advancer ============= -->
	<!-- =================================================== -->

	<bean id="advancer" class="net.micwin.elysium.jobs.AdvancerTask" />

	<bean id="advancerTask" class="org.springframework.scheduling.timer.ScheduledTimerTask">
		<property name="delay" value="60000" />
		<property name="period" value="60000" />
		<property name="timerTask" ref="advancer" />
	</bean>

	<bean id="timerFactory" class="org.springframework.scheduling.timer.TimerFactoryBean">
		<property name="scheduledTimerTasks">
			<list>
				<ref bean="advancerTask" />
			</list>
		</property>
	</bean>

	<!-- =================================================== -->
	<!-- =============== configuring application =========== -->
	<!-- =================================================== -->


</beans>